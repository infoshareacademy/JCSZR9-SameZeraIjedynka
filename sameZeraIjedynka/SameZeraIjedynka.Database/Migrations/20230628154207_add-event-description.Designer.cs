// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SameZeraIjedynka.Database.Context;

#nullable disable

namespace SameZeraIjedynka.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230628154207_add-event-description")]
    partial class addeventdescription
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SameZeraIjedynka.Database.Entities.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organizer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            Capacity = 100,
                            Date = new DateTime(2023, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Default Description",
                            Name = "Event1",
                            Organizer = "Organizer1",
                            Place = "Gdansk, Zielona 23",
                            Price = 0,
                            Target = 1
                        },
                        new
                        {
                            EventId = 2,
                            Capacity = 1200,
                            Date = new DateTime(2024, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Default Description",
                            Name = "Event2",
                            Organizer = "Organizer2",
                            Place = "Gdynia, Zielona 31",
                            Price = 10,
                            Target = 3
                        },
                        new
                        {
                            EventId = 3,
                            Capacity = 200,
                            Date = new DateTime(2023, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Default Description",
                            Name = "Event3",
                            Organizer = "Organizer3",
                            Place = "Gdańsk, Czerwona 1",
                            Price = 0,
                            Target = 3
                        },
                        new
                        {
                            EventId = 4,
                            Capacity = 40,
                            Date = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Default Description",
                            Name = "Event4",
                            Organizer = "Organizer4",
                            Place = "Sopot, Zolta 5",
                            Price = 0,
                            Target = 0
                        },
                        new
                        {
                            EventId = 5,
                            Capacity = 70,
                            Date = new DateTime(2023, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Default Description",
                            Name = "Event5",
                            Organizer = "Organizer5",
                            Place = "Gdansk, Czerwona 123",
                            Price = 100,
                            Target = 2
                        },
                        new
                        {
                            EventId = 6,
                            Capacity = 700,
                            Date = new DateTime(2023, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Default Description",
                            Name = "Event6",
                            Organizer = "Organizer4",
                            Place = "Gdansk, Niebieska 20",
                            Price = 10,
                            Target = 1
                        });
                });

            modelBuilder.Entity("SameZeraIjedynka.Database.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Name = "AAA",
                            Password = "BBB"
                        },
                        new
                        {
                            UserId = 2,
                            Name = "BBB",
                            Password = "CCC"
                        },
                        new
                        {
                            UserId = 3,
                            Name = "CCC",
                            Password = "DDD"
                        });
                });

            modelBuilder.Entity("SameZeraIjedynka.Database.Entities.UserFavorite", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EventId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            UserId = 1
                        },
                        new
                        {
                            EventId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("SameZeraIjedynka.Database.Entities.UserFavorite", b =>
                {
                    b.HasOne("SameZeraIjedynka.Database.Entities.Event", "Event")
                        .WithMany("EventFavorites")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SameZeraIjedynka.Database.Entities.User", "User")
                        .WithMany("UsersFavorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SameZeraIjedynka.Database.Entities.Event", b =>
                {
                    b.Navigation("EventFavorites");
                });

            modelBuilder.Entity("SameZeraIjedynka.Database.Entities.User", b =>
                {
                    b.Navigation("UsersFavorites");
                });
#pragma warning restore 612, 618
        }
    }
}
